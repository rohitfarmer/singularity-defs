BootStrap: docker
From: ubuntu:bionic

%labels
    APPLICATION_NAME SONAR on Ubuntu Bionic 
    AUTHOR_NAME Rohit Farmer
    AUTHOR_EMAIL rohit.farmer@gmail.com
    YEAR 2025

%help
    This container conatins:
        SONAR on Ubuntu Bionic

%environment
    # Set system locale
    PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
    export LANG=C.UTF-8 
    export LC_ALL=C.UTF-8
    

%post
    # Change to tmp directory to download temporary files
    rm -r /tmp/singularity-build
    mkdir /tmp/singularity-build
    cd /tmp/singularity-build

    echo "Installing compilers and libraries"
    apt-get -qq -y update
    
    export DEBIAN_FRONTEND=noninteractive
    apt-get -qq install -y --no-install-recommends tzdata apt-utils software-properties-common 

    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime 
    dpkg-reconfigure --frontend noninteractive  tzdata
    
    apt-get -y --no-install-recommends upgrade 
    add-apt-repository ppa:neovim-ppa/stable
    apt-get -y update
    apt-get install -y --no-install-recommends \
        autoconf \
        automake \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        cpanminus \
        curl \
        dirmngr \
        fuse \
        gcc \
        gcc-multilib \
        g++ \
        gfortran \
        git \
        gdal-bin \
        graphviz \
        libidn11 \
        liblwp-protocol-https-perl \
        libnet-https-any-perl \
        libdb-dev \
        libgdal-dev \
        libtool \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libexpat1-dev \
        libatlas-base-dev \
        libxml2-dev \
        libcairo2-dev \
        libeigen3-dev \
        libcupti-dev \
        libpcre2-dev \
        libpcre3-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libboost-dev \
        libboost-system-dev \
        libboost-thread-dev \
        libboost-serialization-dev \
        libboost-regex-dev \
        libfribidi-dev \
        libgtk2.0-dev \
        libreadline-dev \
        libbz2-dev \
        liblzma-dev \
        libhdf5-dev \
        libpcre++-dev \
        libpango1.0-dev \
        libopenblas-dev \
        liblapack-dev \
	libudunits2-dev \
	libv8-dev \
        libxt-dev \
        make \
        neovim \
        openjdk-8-jdk \
        perl \
	proj-bin \
        python3-neovim \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python3-pyqt4 \
        python3-pyqt4.qtopengl \
        python-lxml \
        python-six \
        software-properties-common \
        tcl \
        tcl-dev \
        tk \
        tk-dev \
        texlive \
        texlive-fonts-extra \
        texlive-latex-extra \
        texinfo \
        vim \
        wget \
        xvfb \
        xauth \
        xfonts-base \
        zlib1g-dev \
        zip

    export LANG=C.UTF-8 LC_ALL=C.UTF-8

# Clean /tmp of any previous downloads
	rm -rf /tmp/singularity-build/*

# Install biopython
	python3 -m pip install --upgrade pip --no-input
	python3 -m pip install "biopython==1.73" --no-input

# Install Python packages
	python3 -m pip install docopt fuzzywuzzy --no-input

# Install Perl modules
	cpanm \
	CPAN::Meta \
	YAML \
	Digest::SHA \
	Module::Build \
	Test::Most \
	Test::Weaken \
	Test::Memory::Cycle \
	Clone \
	HTML::TableExtract \
	Algorithm::Munkres \
	Algorithm::Combinatorics \
	Statistics::Basic \
	List::Util \
	PDL::LinearAlgebra::Trans \
	Array::Compare \
	Convert::Binary::C \
	Error \
	Graph@0.9711 \
	GraphViz \
	Inline::C \
	PostScript::TextBlock \
	Set::Scalar \
	Sort::Naturally \
	Math::Random \
	Spreadsheet::ParseExcel \
	IO::String \
	JSON \
	Data::Stag \
	CGI \
	Bio::Phylo \
	Switch

# Install BioPerl
	cpanm -v https://github.com/bioperl/bioperl-live/archive/release-1-7-2.tar.gz

# Install additional Python packages and libraries
	python3 -m pip install --upgrade ete3 --no-input
	python3 -m pip install airr --no-input
	#python3 -m pip install opencv-python --no-input
	python3 -m pip install scikit-build --no-input
	python3 -m pip install networkx --no-input
	python3 -m pip install python-Levenshtein --no-input
	python3 -m pip install openpyxl --no-input

# Install R 3.5.3
	wget -q https://cran.r-project.org/src/base/R-3/R-3.5.3.tar.gz
        tar -zxf R-3.5.3.tar.gz
        cd R-3.5.3
        ./configure
        make
        make install
        cd /tmp/singularity-build/

# Install R packages
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/glue/glue_1.6.2.tar.gz")'
	R --vanilla -e 'install.packages(c("cli", "rlang"), repos="http://cran.r-project.org/")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/lifecycle/lifecycle_1.0.3.tar.gz")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/gtable/gtable_0.3.5.tar.gz")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/MASS/MASS_7.3-58.tar.gz")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/R6/R6_2.5.1.tar.gz")'
	R --vanilla -e 'install.packages(c("farver", "labeling", "munsell", "RColorBrewer", "viridisLite"), repos="http://cran.r-project.org/")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/scales/scales_1.2.1.tar.gz")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/withr/withr_3.0.0.tar.gz")'
	R --vanilla -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_3.4.4.tar.gz")'
	R --vanilla -e 'install.packages(c("isoband", "tibble", "vctrs"), repos="http://cran.r-project.org/")'
	R --vanilla -e 'install.packages(c("docopt", "ptinpoly"), repos="http://cran.r-project.org/")'


# Install fastq-dump for vignette
	cd /opt
	curl -O https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.9.6-1/sratoolkit.2.9.6-1-ubuntu64.tar.gz
	tar -xzf sratoolkit.2.9.6-1-ubuntu64.tar.gz
	rm  sratoolkit.2.9.6-1-ubuntu64.tar.gz
	ln -s /opt/sratoolkit.2.9.6-1-ubuntu64/bin/fastq-dump /usr/bin/fastq-dump
 
# Pull latest SONAR source code and set it up
	cd /opt
	git clone https://github.com/scharch/SONAR.git
	cd SONAR
	echo | ./setup.py
	cp sonar /usr/bin
        cd /tmp/singularity-build/

# Cleanup
	echo "Cleaning"
	apt-get -qq clean
	rm -rf /var/lib/apt/lists/*
	rm -rf tmp/singularity-build/*
